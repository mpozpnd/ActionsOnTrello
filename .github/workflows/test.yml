name: testing code
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v1
      - name: setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ./src
      - name: pytest
        run: |
          pip install pytest
          pytest
        working-directory: ./src
      - name: lint
        run: |
          pip install flake8
          flake8 --max-line-length 120 main.py g2trello test
        working-directory: ./src

  validate_tf:
      runs-on: ubuntu-latest
      steps:
        - name: 'Terraform Format'
          uses: hashicorp/terraform-github-actions@master
          with:
              tf_actions_version: 0.12.13
              tf_actions_subcommand: 'fmt'
              tf_actions_working_dir: 'infra'
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              TF_VAR_release_version: ${{ steps.add_release_version.outputs.tag }}

        - name: 'Terraform Init'
          uses: hashicorp/terraform-github-actions@master
          with:
              tf_actions_version: 0.12.13
              tf_actions_subcommand: 'init'
              tf_actions_working_dir: 'infra'
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              TF_VAR_release_version: ${{ steps.add_release_version.outputs.tag }}

        - name: 'Terraform Validate'
          uses: hashicorp/terraform-github-actions@master
          with:
              tf_actions_version: 0.12.13
              tf_actions_subcommand: 'validate'
              tf_actions_working_dir: 'infra'
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              TF_VAR_release_version: ${{ steps.add_release_version.outputs.tag }}

        - name: 'Terraform Plan'
          uses: hashicorp/terraform-github-actions@master
          with:
              tf_actions_version: 0.12.13
              tf_actions_subcommand: 'plan'
              tf_actions_working_dir: 'infra'
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              TF_VAR_release_version: ${{ steps.add_release_version.outputs.tag }}
